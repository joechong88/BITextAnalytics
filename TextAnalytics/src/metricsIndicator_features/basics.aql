------------------------------------------------------------------------------
-- IBM Confidential 
-- OCO Source Materials 
-- 5725-C09
-- (C) Copyright IBM Corp. 2011 
-- The source code for this program is not published or otherwise divested of its trade secrets, 
-- irrespective of what has been deposited with the U.S. Copyright Office.
------------------------------------------------------------------------------

--*****************************************************************************
-- BigInsights TextAnalytics sample Indicator extractor
-- 
-- File name: aql/Indicator/basics.aql
-- Description: Basic Feature rules
--*****************************************************************************


module metricsIndicator_features;


-- Note that all import statements in a given AQL script must be right below the top level
-- module statement and above all other AQL statements.
 
import dictionary metrics from module metricsIndicator_dictionaries as MetricDict;
import dictionary units from module metricsIndicator_dictionaries as UnitDict;
import dictionary abbreviations from module metricsIndicator_dictionaries as AbbreviationDict;

--------------------------------------------------------------------------------------------

-- Identify mentions of financial metrics
-- Example: gross profit margin, cash flow, diluted earnings per share

create view Metric as
extract dictionary 'MetricDict' 
	on D.text as match
from Document D;

--------------------------------------------------------------------------------------------

-- Identify mentions of numbers with optional decimals
-- Example: 7, 49, 11.2

create view Number as
extract regex /\d+(\.\d+)?/ 
	on R.text as match
from Document R; 

--------------------------------------------------------------------------------------------

-- Indentify mentions of financial amount units
-- Example: million, billion

create view Unit as
extract dictionary 'UnitDict' 
	on R.text as match
from Document R; 

--------------------------------------------------------------------------------------------

-- Identify sentence boundaries as either:
-- 	(a) two new lines separated by 0 or more whitespace, or
-- 	(b) end of sentence punctuation (.?!) that does not overlap with a common abbreviation

create view SentenceBoundary as
extract regex /(\n\s*\n)|([\.\?!]+\s)/
	on D.text as match
from Document D
-- Filter out common abbreviations
having Not(ContainsDict('AbbreviationDict', 
		CombineSpans(LeftContextTok(match, 1), match)));
		
---------------------------------------------------------------------------------------------
